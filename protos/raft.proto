syntax="proto3";
package dark_syster;

import "protos/base.proto";

option go_package = "/lib/pb";

service RaftService {
    rpc ApplyMembership(ApplyMembershipRequest) returns(ApplyMembershipResponse);
    rpc RequestVote(RequestVoteRequest) returns(RequestVoteResponse);
    rpc SendHeartbeat(HeartbeatRequest) returns(HeartbeatResponse);
    rpc AddUpdateCluster(AddUpdateClusterRequest) returns(AddUpdateClusterResponse);
    rpc CommitUpdateCluster(CommitUpdateClusterRequest) returns(CommitUpdateClusterResponse);
}

// MEMBERSHIP
message ApplyMembershipRequest {
    bool insert = 1;

    // Base Request
    Address sender = 2;
}

message ApplyMembershipResponse {
    RaftNodeLog         log                 = 1;
    repeated Address    clusterAddressList  = 2;

    // Base Response
    STATUS status = 3;
    optional string responseMsg = 4;
    optional Address redirectedAddress = 5;
}

// CLUSTER
message AddUpdateClusterRequest {
    bool insert = 1;

    // Base Request
    Address sender = 2;
}

message AddUpdateClusterResponse {
    // Base Response
    STATUS status               = 1;
    optional string responseMsg = 2;
    optional Address redirectedAddress = 3;
}

message CommitUpdateClusterRequest {
    bool insert = 1;

    // Base Request
    Address sender = 2;
}

message CommitUpdateClusterResponse {
    // Base Response
    STATUS status               = 1;
    optional string responseMsg = 2;
    optional Address redirectedAddress = 3;
}



// REQUEST VOTE
message RequestVoteRequest {
    Address votedFor    = 1;
    uint32  term        = 2;
    uint64  logLength   = 3;
    uint64  logTerm     = 4;

    // Base Request
    optional Address sender = 5;
}

message RequestVoteResponse {
    Address nodeAddress         = 1;
    uint64  currentTerm         = 2;
    bool    granted             = 3;

    // Base Response
    STATUS status               = 4;
    optional string responseMsg = 5;
    optional Address redirectedAddress = 6;

}

message HeartbeatRequest {
    Address                     leaderAddress   = 1;
    uint64                      term            = 2;
    uint64                      prefixLength    = 3;
    uint64                      prefixTerm      = 4;
    uint64                      commitLength    = 5;
    repeated RaftLogEntry       suffix          = 6;
    repeated Address            clusterAddress  = 7;

    // Base Request
    optional Address sender = 8;
}

message HeartbeatResponse {
    uint32  ack                 = 1;
    uint64  term                = 2;
    bool    successAppend       = 3;

    // Base Response
    STATUS status               = 4;
    optional string responseMsg = 5;
    optional Address redirectedAddress = 6;

}